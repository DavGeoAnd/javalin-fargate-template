name: Test Deployment

on:
  pull_request:
    branches:
      - main
    types:
      - opened
      - synchronize

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: javalin-fargate-template

jobs:
  deploy_to_test:
    name: Create and Deploy Test Image
    runs-on: ubuntu-latest
    environment: test

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - id: get-version
        uses: jactions/maven-version@v1.2.0

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Maven
        run: mvn clean package

      - name: Configure AWS Creds
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:v${{ steps.get-version.outputs.version }}-${GITHUB_SHA::7} --build-arg service_version=${{ steps.get-version.outputs.version }} --build-arg deploy_env=test .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:v${{ steps.get-version.outputs.version }}-${GITHUB_SHA::7}
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:v${{ steps.get-version.outputs.version }}-${GITHUB_SHA::7}" >> $GITHUB_OUTPUT