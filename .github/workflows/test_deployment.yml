name: Test Deployment

on:
  push:
    branches:
      - feature/*

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: javalin-fargate-template
  ECS_TASK_DEFINITION: task-definition.json
  CONTAINER_NAME: javalin-fargate-template
  ECS_SERVICE: javalin-fargate-template-test
  ECS_CLUSTER: microservices

jobs:
  deploy_to_test:
    name: Create and Deploy Test Image
    runs-on: ubuntu-latest
    environment: test

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            test:
              - 'env_files/test/**'

      - id: get-version
        uses: jactions/maven-version@v1.2.0

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Maven
        run: mvn clean package

      - name: Configure AWS Creds
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Update .env in S3
        if: steps.changes.outputs.test == 'true'
        run: aws s3 cp env_files/test/ s3://microservices-396607284401/javalin-fargate-template/test/ --recursive

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:${GITHUB_REF_NAME#feature/}-${GITHUB_SHA::7} \
          --build-arg service_name=$ECR_REPOSITORY \
          --build-arg service_version=${{ steps.get-version.outputs.version }} \
          --build-arg deployment_environment=test .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:${GITHUB_REF_NAME#feature/}-${GITHUB_SHA::7}
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:${GITHUB_REF_NAME#feature/}-${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

      - name: Download task definition
        run: |
          aws ecs describe-task-definition --task-definition javalin-fargate-template-test --query taskDefinition > task-definition.json

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@c804dfbdd57f713b6c079302a4c01db7017a36fc
        with:
          task-definition: ${{ env.ECS_TASK_DEFINITION }}
          container-name: ${{ env.CONTAINER_NAME }}
          image: ${{ steps.build-image.outputs.image }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@df9643053eda01f169e64a0e60233aacca83799a
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true